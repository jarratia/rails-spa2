require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/categories", type: :request do
  # This should return the minimal set of attributes required to create a valid
  # Category. As you add validations to Category, be sure to
  # adjust the attributes here as well.
  let(:movies) do
    [
      attributes_for(:movie, name: 'titanic', year: 2000),
      attributes_for(:movie, name: 'V for vendetta', year: 2008)
    ]
  
  end

  let(:valid_attributes) do
    {
      name: "Terror",
      description: "Descripción de terror",
      movies_attributes: movies
    }
  end 
 
  let(:invalid_attributes)do
    {
      name: nil,
      description: "Descripción de terror",
      movies_attributes: movies
    }
  
  end 

    describe "GET /api/categories" do
      it "debe mostrar listado de categorias" do
        get categories_path
        expect(response).to have_http_status(200)
      end
    end
  
    describe "GET /api/categories" do
      let(:category) { create :category } 
      it "debe mostrar una categoria" do
        get category_path category.id
        expect(response).to have_http_status(200)
      end
    end

    # describe "POST #create" do
    #   context "with valid params" do
    #     it "creates new category" do
    #       expect {
    #         post :create, params: {category: valid_attributes}
    #       }.to change(Category, :count).by(1)
    #     end

    #     it "creates new category increment movies" do
    #       expect {
    #         post :create, params: {category: valid_attributes}
    #       }.to change(Movie, :count).by(2)
    #     end

    #     it "renders JSON response with the new category" do
    #       post :create, params: {category: valid_attributes}
    #       expect(response).to have_http_status(:created)
    #       expect(response.content_type).to eq('application/json')
    #       expect(response.location).to eq(category_url(Category.last))
    #     end
    #   end
    # end

end